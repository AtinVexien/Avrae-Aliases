embed <drac2>
args = &ARGS&
bet = 5 if not args else int(args[0]) if args[0].isdigit() else err("You can only bet credits in whole numbers.")
out = []
bag = load_json(bags)
coins = [i for i in bag if ('Wallet' in i[0])][0]
credit = 'Credit'
if coins[1].get(credit) < bet:
    return err("You don't have enough Credits to cover the bet!")
else:
    coins[1].update({credit:coins[1][credit] - bet})
    set_cvar("bags", dump_json(bag))
deck = ["A \u2665\ufe0f", "2 \u2665\ufe0f", "3 \u2665\ufe0f", "4 \u2665\ufe0f", "5 \u2665\ufe0f", "6 \u2665\ufe0f", "7 \u2665\ufe0f", "8 \u2665\ufe0f", "9 \u2665\ufe0f", "10 \u2665\ufe0f", "J \u2665\ufe0f", "Q \u2665\ufe0f", "K \u2665\ufe0f", "A \u2663\ufe0f", "2 \u2663\ufe0f", "3 \u2663\ufe0f", "4 \u2663\ufe0f", "5 \u2663\ufe0f", "6 \u2663\ufe0f", "7 \u2663\ufe0f", "8 \u2663\ufe0f", "9 \u2663\ufe0f", "10 \u2663\ufe0f", "J \u2663\ufe0f", "Q \u2663\ufe0f", "K \u2663\ufe0f", "A \u2666\ufe0f", "2 \u2666\ufe0f", "3 \u2666\ufe0f", "4 \u2666\ufe0f", "5 \u2666\ufe0f", "6 \u2666\ufe0f", "7 \u2666\ufe0f", "8 \u2666\ufe0f", "9 \u2666\ufe0f", "10 \u2666\ufe0f", "J \u2666\ufe0f", "Q \u2666\ufe0f", "K \u2666\ufe0f", "A \u2660\ufe0f", "2 \u2660\ufe0f", "3 \u2660\ufe0f", "4 \u2660\ufe0f", "5 \u2660\ufe0f", "6 \u2660\ufe0f", "7 \u2660\ufe0f", "8 \u2660\ufe0f", "9 \u2660\ufe0f", "10 \u2660\ufe0f", "J \u2660\ufe0f", "Q \u2660\ufe0f", "K \u2660\ufe0f"]
card1 = deck.pop(randint(len(deck)))
card2 = deck.pop(randint(len(deck)))
card3 = deck.pop(randint(len(deck)))
card4 = deck.pop(randint(len(deck)))
out.append(f'-title "{name} bets {bet} Credits and is dealt:"')
dealt = []
dealt.append(card1)
dealt.append(card3)
dealer = []
dealer.append(card2)
dealer.append(card4)
total_value = 0
for card in dealt:
    cardvalue = 11 if "A" in card else 2 if "2" in card else 3 if "3" in card else 4 if "4" in card else 5 if "5" in card else 6 if "6" in card else 7 if "7" in card else 8 if "8" in card else 9 if "9" in card else 10
    total_value += cardvalue
dealer_value = 0
for card in dealer:
    cardvalue = 11 if "A" in card else 2 if "2" in card else 3 if "3" in card else 4 if "4" in card else 5 if "5" in card else 6 if "6" in card else 7 if "7" in card else 8 if "8" in card else 9 if "9" in card else 10
    dealer_value += cardvalue
out.append(f'''-f "**{name}'s Hand**|**{card1}**\n**{card3}**\nTotal: **{total_value}{" - Winner!" if total_value == 21 else ""}**|inline"''')
out.append(f'''-f "**Dealer's Hand**|**{card2}**\n**{card4}**\nTotal: **{dealer_value}{" - The house wins!" if dealer_value == 21 and total_value != 21 else ""}**|inline"''')
if total_value == 21 and dealer_value == 21:
    out.append('-f "**Push!**|No winners"')
    coins[1].update({credit:coins[1][credit] + int(bet)})
    set_cvar("bags", dump_json(bag))
    out.append(f'''-f "{name}'s Wallet|{coins[1][credit]} Credits (+{int(bet)})"''')
elif total_value == 21:
    coins[1].update({credit:coins[1][credit] + int(bet*1.5)})
    set_cvar("bags", dump_json(bag))
    out.append(f'''-f "{name}'s Wallet|{coins[1][credit]} Credits (+{int(bet*1.5)})"''')
elif dealer_value == 21:
    out.append('-f "Better luck next time!"')
else:
    character().set_cvar("bet21", bet)
    character().set_cvar("cards21", dump_json(deck))
    character().set_cvar("dealt21", dump_json(dealt))
    character().set_cvar("dealer21", dump_json(dealer))
    out.append(f'-f "What will you do next?|`{ctx.prefix}{ctx.alias} stand` to stand and end the game\n`{ctx.prefix}{ctx.alias} hit` to deal another card."')
return " ".join(out)
</drac2>
-thumb {{image}} -color {{color}}
